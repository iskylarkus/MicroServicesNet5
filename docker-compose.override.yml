version: '3.8'
services:
  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - catalogdb_volume:/data/db
  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"
  discountdb:
    container_name: discountdb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - discountdb_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Password12*
      - POSTGRES_DB=discountdb
  identitydb:
    container_name: identitydb
    restart: always
    user: root
    ports:
      - "1433:1433"
    volumes:
      - identitydb_volume:/var/opt/mssql/data
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password12*
  orderdb:
    container_name: orderdb
    restart: always
    user: root
    ports:
      - "1444:1433"
    volumes:
      - orderdb_volume:/var/opt/mssql/data
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
      - SA_PASSWORD=Password12*
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  identity.api:
    container_name: identity.api
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DefaultConnection=Server=identitydb,1433;Database=identitydb;User=sa;Password=Password12*;"
    ports:
      - "5001:80"
    depends_on:
      - identitydb
  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL=http://identity.api
      - DatabaseSettings:ConnectionString=mongodb://catalogdb:27017
      - RabbitMQUrl=rabbitmq
    ports:
      - "5011:80"
    depends_on:
      - catalogdb
  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL=http://identity.api
      - RedisSettings:Host=basketdb
      - RedisSettings:Port=6379
    ports:
      - "5013:80"
    depends_on:
      - basketdb
  photostock.api:
    container_name: photostock.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL=http://identity.api
    ports:
      - "5012:80"
    volumes:
      - type: bind
        source: D:\docker\photos
        target: /app/wwwroot/photos
  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL=http://identity.api
      - "ConnectionStrings:PostgreSql=Server=discountdb;Port=5432;Database=discountdb;User ID=admin;Password=Password12*;Integrated Security=true;Pooling=true;"
    ports:
      - "5014:80"
    depends_on:
      - discountdb
  payment.api:
    container_name: payment.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL=http://identity.api
      - RabbitMQUrl=rabbitmq
    ports:
      - "5016:80"
  order.api:
    container_name: order.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL=http://identity.api
      - "ConnectionStrings:DefaultConnection=Server=orderdb,1444;Database=orderdb;User=sa;Password=Password12*;"
      - RabbitMQUrl=rabbitmq
    ports:
      - "5015:80"
    depends_on:
      - orderdb
  gateway.api:
    container_name: gateway.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - IdentityServerURL=http://identity.api
    ports:
      - "5000:80"

# docker-compose up
# docker-compose down